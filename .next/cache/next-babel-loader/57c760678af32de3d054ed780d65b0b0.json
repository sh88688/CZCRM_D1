{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/shivam-c-zentrix/Desktop/CZCRM_D1/pages/dashboard.js\";\nvar __jsx = React.createElement;\nimport fetchCall from '../components/fetchCaller';\nimport React, { Component } from \"react\";\nimport { MDBContainer, MDBRow } from \"mdbreact\";\nimport VerticalBarChart from '../components/verticalBarChart';\nimport Card from '../components/card';\nimport CardContent from '../components/cardContent';\nimport Header from '../components/header';\nimport ConfigData from '../Data/ConfigData.json';\nimport PieChart from '../components/pieChart'; // import { configGraph, configCard, configPrmArray }\tfrom \"../static/DashboardConfig.js\"\t;\n\nimport LoadingContent from '../components/loadingContent';\nimport \"../Styles/dashboard.css\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateDataState\", function (dataObject, TYPE) {\n      var copyData = {};\n      copyData = _objectSpread({}, _this.state[TYPE]);\n      copyData.data = dataObject[TYPE].data;\n\n      _this.setState(_defineProperty({}, TYPE, copyData));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateHandle\", function () {\n      var postData = {};\n      postData.clientId = \"1\";\n\n      var postJson = _JSON$stringify(postData);\n\n      var queryParam = \"?postData=\".concat(postJson);\n      var url = new URL(\"http://172.16.3.46/CZCRM/api/dashboard_request.php\".concat(queryParam));\n      var fetchCallOptions = {\n        method: \"GET\"\n      };\n\n      try {\n        var result = fetchCall(url, fetchCallOptions, \"json\");\n        result.then(function (data) {\n          if (data.status == 'error') {// error message here\n          } else {\n            var dataObject = data;\n            console.log('data ==> ', dataObject);\n\n            _this.updateDataState(dataObject, \"categoryTickets\");\n\n            _this.updateDataState(dataObject, \"priorityTickets\");\n\n            _this.updateDataState(dataObject, \"statusTickets\");\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleCollapse\", function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    });\n\n    _this.state = {\n      isOpen: false,\n      isGraphLoaded: true,\n      totalTickets: {\n        data: {\n          primary: {\n            title: \"Tickets Created\",\n            value: 435,\n            progress_title: \"Closed\",\n            progress_value: 5\n          },\n          secondary: {\n            title: \"Tickets Escalated\",\n            value: 49,\n            progress_title: \"Escalation Rate\",\n            progress_value: 74\n          }\n        }\n      },\n      totalMails: {\n        data: {\n          primary: {\n            title: \"Mails Received\",\n            value: 1543,\n            progress_title: \"Mails Replied\",\n            progress_value: 9\n          },\n          secondary: {\n            title: \"Fresh Mails Received\",\n            value: 36,\n            progress_title: \"Fresh Mails Replied\",\n            progress_value: 46\n          }\n        }\n      },\n      totalUsers: {\n        data: {\n          primary: {\n            title: \"Users\",\n            value: 738,\n            progress_title: \"Active Users\",\n            progress_value: 10\n          },\n          secondary: {\n            title: \"Loggedin Users\",\n            value: 256,\n            progress_title: \"Locked Ticket Users\",\n            progress_value: 12\n          }\n        }\n      },\n      categoryTickets: {\n        chart: PieChart,\n        data: []\n      },\n      priorityTickets: {\n        chart: PieChart,\n        data: []\n      },\n      statusTickets: {\n        chart: VerticalBarChart,\n        data: []\n      }\n    };\n    _this.updateHandle = _this.updateHandle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateHandle(); // setInterval(this.updateHandle,3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var progressModule = ['totalTickets', 'totalMails', 'totalUsers'];\n      var chartModule = ['categoryTickets', 'statusTickets', 'priorityTickets'];\n\n      if (this.state.isGraphLoaded == false) {\n        return __jsx(MDBContainer, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, __jsx(MDBRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, __jsx(Header, {\n          title: \"Dashbaord\",\n          isOpen: this.state.isOpen,\n          collapse: function collapse() {\n            return _this2.toggleCollapse;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        })), __jsx(MDBRow, {\n          className: \"justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, __jsx(LoadingContent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        })));\n      } else {\n        return __jsx(MDBContainer, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, __jsx(MDBRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, __jsx(Header, {\n          title: \"Dashboard\",\n          collapse: this.toggleCollapse,\n          isOpen: this.state.isOpen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        })), __jsx(MDBRow, {\n          className: \"mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, progressModule.map(function (module, index) {\n          return __jsx(Card, {\n            key: index,\n            config: ConfigData[module],\n            content: __jsx(CardContent, {\n              key: index,\n              data: _this2.state[module].data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209\n            },\n            __self: this\n          });\n        })), __jsx(MDBRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, chartModule.map(function (module, index) {\n          var CHART = _this2.state[module].chart;\n          return __jsx(Card, {\n            key: index,\n            config: ConfigData[module],\n            content: __jsx(CHART, {\n              key: index,\n              data: _this2.state[module].data,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 219\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 218\n            },\n            __self: this\n          });\n        })));\n      }\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/shivam-c-zentrix/Desktop/CZCRM_D1/pages/dashboard.js"],"names":["fetchCall","React","Component","MDBContainer","MDBRow","VerticalBarChart","Card","CardContent","Header","ConfigData","PieChart","LoadingContent","Dashboard","props","dataObject","TYPE","copyData","state","data","setState","postData","clientId","postJson","queryParam","url","URL","fetchCallOptions","method","result","then","status","console","log","updateDataState","error","isOpen","isGraphLoaded","totalTickets","primary","title","value","progress_title","progress_value","secondary","totalMails","totalUsers","categoryTickets","chart","priorityTickets","statusTickets","updateHandle","bind","progressModule","chartModule","toggleCollapse","map","module","index","CHART"],"mappings":"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","sourcesContent":["import fetchCall from '../components/fetchCaller';\nimport React, { Component } from \"react\";\nimport { MDBContainer, MDBRow } from \"mdbreact\";\nimport VerticalBarChart from '../components/verticalBarChart';\nimport Card from '../components/card';\nimport CardContent from '../components/cardContent';\nimport Header from '../components/header';\nimport ConfigData from '../Data/ConfigData.json';\nimport PieChart from '../components/pieChart';\n// import { configGraph, configCard, configPrmArray }\tfrom \"../static/DashboardConfig.js\"\t;\nimport LoadingContent from '../components/loadingContent';\nimport \"../Styles/dashboard.css\";\n\nclass Dashboard extends Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      isOpen: false,\n      isGraphLoaded: true,\n      totalTickets: {\n        data: {\n          primary: {\n            title: \"Tickets Created\",\n            value: 435,\n            progress_title: \"Closed\",\n            progress_value: 5\n          },\n          secondary: {\n            title: \"Tickets Escalated\",\n            value: 49,\n            progress_title: \"Escalation Rate\",\n            progress_value: 74\n          }\n        }\n      },\n      totalMails: {\n        data: {\n          primary: {\n            title: \"Mails Received\",\n            value: 1543,\n            progress_title: \"Mails Replied\",\n            progress_value: 9\n          },\n          secondary: {\n            title: \"Fresh Mails Received\",\n            value: 36,\n            progress_title: \"Fresh Mails Replied\",\n            progress_value: 46\n          }\n        }\n      },\n      totalUsers: {\n        data: {\n          primary: {\n            title: \"Users\",\n            value: 738,\n            progress_title: \"Active Users\",\n            progress_value: 10\n          },\n          secondary: {\n            title: \"Loggedin Users\",\n            value: 256,\n            progress_title: \"Locked Ticket Users\",\n            progress_value: 12\n          }\n        }\n      },\n      categoryTickets: {\n        chart: PieChart,\n        data: [\n          \n        ]\n      },\n      priorityTickets: {\n        chart: PieChart,\n        data: []\n      },\n      statusTickets: {\n        chart: VerticalBarChart,\n        data: []\n      }\n}\n    this.updateHandle=this.updateHandle.bind(this);\n   \n  }\n\n  updateDataState = (dataObject,TYPE) => {\n    let copyData  =   {};\n    copyData = {...this.state[TYPE]};\n    copyData.data = dataObject[TYPE].data;\n    this.setState({[TYPE] : copyData});\n\n  }\n\n  componentDidMount() {\n    this.updateHandle();\n    // setInterval(this.updateHandle,3000);\n  }\n\n  updateHandle = () => {\n    const postData          =       {};\n    postData.clientId       =       \"1\";\n    const   postJson        =       JSON.stringify(postData);\n    const queryParam = `?postData=${postJson}`;\n    const url = new URL(`http://172.16.3.46/CZCRM/api/dashboard_request.php${queryParam}`);\n    const fetchCallOptions = {\n       method: \"GET\",\n     };\n    try {\n      const result = fetchCall(url, fetchCallOptions, \"json\");\n      result.then(data => {\n        if(data.status == 'error'){\n          // error message here\n        }\n        else{\n          let dataObject  = data;\n          console.log('data ==> ',dataObject);\n          this.updateDataState(dataObject,\"categoryTickets\");\n          this.updateDataState(dataObject,\"priorityTickets\");\n          this.updateDataState(dataObject,\"statusTickets\");\n        }\n      })\n\n    }\n    catch (error) {\n        console.log(error);\n    }\n\n  }\n\n  // async  updateHandle() {\n\t//     const\tpostData\t=\t{};\n\t// \tpostData.clientId\t=\t\"1\";\n  //   const \tpostJson\t=\tJSON.stringify(postData);\n  //   try {\n  //   const resData= await\tfetch(`http://api.cz-tuts.com/dashboard`,\n  //   {\n  //     method:\"post\",\n  //     credentials:'include', \n  //     headers: {\n  //      'Content-Type': 'application/json' \n  //     }\n  // })\n  // if(resData.status==200){\n  //   const jsonData=await resData.json();\n  \n  //   if(jsonData.status==1){\n  //     const data=jsonData.data;\n  //     // console.log(jsonData);\n  //     let dataObject\t= data;\n  //     this.setState({isGraphLoaded:true});\n  //     this.updateDataState(dataObject.tickets,\"totalTickets\",configPrmArray.tickets);\n  //     this.updateDataState(dataObject.mails,\"totalMails\",configPrmArray.mails);\n  //     this.updateDataState(dataObject.users,\"totalUsers\",configPrmArray.users);\t\t\t\t\t\t\t\t\n  //     this.setState({priorityPie:dataObject.priorityTickets});\n  //     this.setState({categoryPie:dataObject.categoryTickets});\n  //     this.setState({statusBar:dataObject.statusTickets});\n  //   }  \n  //   else{\n      \n  //   }\n  // }\n  // else{\n  //   console.log(resData.status);\n  //     if(resData.status==401 || resData.status==403){\n       \n  //       window.location=\"/auth\";\n  //     }\n  // }\n    \n  //   }\n\t// \tcatch(err){\n  //       console.log(err);\n  //   }\n\t\t\t\n\t\t\n  // }\n\n\n\n  toggleCollapse = () =>{\n    this.setState({isOpen : !this.state.isOpen});\n  }\n  render() {\n    const progressModule = ['totalTickets','totalMails','totalUsers'];\n    const chartModule = ['categoryTickets','statusTickets','priorityTickets'];\n\n\t if(this.state.isGraphLoaded==false){\n\t\t return(\n\t\t\t<MDBContainer fluid>\n\t\t\t\t<MDBRow >\n\t\t\t\t\t<Header title=\"Dashbaord\" isOpen={this.state.isOpen} collapse={() => this.toggleCollapse}/>\n\t\t\t\t</MDBRow>\n\t\t\t\t<MDBRow className=\"justify-content-center\">\n\t\t\t\t\t<LoadingContent />\n\t\t\t\t</MDBRow>\n\t\t\t</MDBContainer>\n\t\t)\n\t }\n\t else{\n\t\treturn (\n      <MDBContainer fluid>\n      <MDBRow >\n         <Header title=\"Dashboard\" collapse={this.toggleCollapse} isOpen={this.state.isOpen} />\n       </MDBRow>\n      <MDBRow className=\"mt-4\">\n          {progressModule.map((module, index) => (\n            <Card key={index} config={ConfigData[module]}\n             content={<CardContent key={index} data={this.state[module].data}/>}\n            />\n          ))}\n      </MDBRow>\n      <MDBRow>\n        {chartModule.map((module, index) => {\n          let CHART = this.state[module].chart;\n          return  (\n            <Card key={index} config={ConfigData[module]}\n            content={<CHART key={index} data={this.state[module].data} />}\n            />\n          )})}\n      </MDBRow>\n    </MDBContainer>\n\t\t);\n\t}\n  }\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}