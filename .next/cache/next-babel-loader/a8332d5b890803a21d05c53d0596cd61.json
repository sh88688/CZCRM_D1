{"ast":null,"code":"var _jsxFileName = \"/Users/tvt/Desktop/Present/Study/React/CZCRM_D1/components/verticalBarChart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell } from 'recharts'; // const VerticalBarchart = React.createClass({ See why error in this\n\nclass VerticalBarChart extends React.Component {\n  render() {\n    const colors = [\"#0712B3\", \"#006600\", \"#7C8AEE\", \"#cc0066\", \"#993300\"];\n    return __jsx(BarChart, {\n      layout: \"vertical\",\n      width: 400,\n      height: 235,\n      data: this.props.data,\n      margin: {\n        top: 10,\n        right: 60,\n        left: 15,\n        bottom: 60\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(CartesianGrid, {\n      stroke: \"#f5f5f5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), __jsx(XAxis, {\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), __jsx(YAxis, {\n      dataKey: \"name\",\n      type: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), __jsx(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), __jsx(Bar, {\n      dataKey: \"value\",\n      barSize: 8,\n      fill: \"#413ea0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.props.data.map((entry, index) => __jsx(Cell, {\n      key: `cell-${index}`,\n      fill: colors[index % 20],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default VerticalBarChart;","map":{"version":3,"sources":["/Users/tvt/Desktop/Present/Study/React/CZCRM_D1/components/verticalBarChart.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Cell","VerticalBarChart","Component","render","colors","props","data","top","right","left","bottom","map","entry","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,aAArC,EAAoDC,OAApD,EAA6DC,IAA7D,QAAwE,UAAxE,C,CAEA;;AACA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA8C;AAG1CC,EAAAA,MAAM,GAAI;AACV,UAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAf;AACD,WACG,MAAC,QAAD;AACA,MAAA,MAAM,EAAC,UADP;AAEA,MAAA,KAAK,EAAE,GAFP;AAGA,MAAA,MAAM,EAAE,GAHR;AAIA,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAJjB;AAKA,MAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAE,EAAN;AAAUC,QAAAA,KAAK,EAAE,EAAjB;AAAqBC,QAAAA,IAAI,EAAE,EAA3B;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,MAAC,aAAD;AAAe,MAAA,MAAM,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,MAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC,OAAb;AAAqB,MAAA,OAAO,EAAE,CAA9B;AAAiC,MAAA,IAAI,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,CAACC,KAAD,EAAQC,KAAR,KACpB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAG,QAAOA,KAAM,EAAzB;AAA4B,MAAA,IAAI,EAAET,MAAM,CAACS,KAAK,GAAG,EAAT,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFN,CAXF,CADH;AAqBA;;AA1B2C;;AA6B9C,eAAeZ,gBAAf","sourcesContent":["import React from 'react';\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell} from 'recharts';\n\n// const VerticalBarchart = React.createClass({ See why error in this\nclass VerticalBarChart extends React.Component{\n\n\n    render () {\n    const colors = [\"#0712B3\", \"#006600\", \"#7C8AEE\", \"#cc0066\", \"#993300\"];\n  \treturn (\n      <BarChart \n      layout=\"vertical\" \n      width={400} \n      height={235} \n      data={this.props.data}\n      margin={{top: 10, right: 60, left: 15, bottom: 60}}\n      >\n        <CartesianGrid stroke='#f5f5f5'/>\n        <XAxis type=\"number\"/>\n        <YAxis dataKey=\"name\" type=\"category\"/>\n        <Tooltip/>\n        <Bar dataKey='value' barSize={8} fill='#413ea0'>\n        {\n              this.props.data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={colors[index % 20]}/>\n              ))\n        }\n        </Bar>\n      </BarChart>\n    );\n  }\n}\n\nexport default VerticalBarChart;\n\n\n"]},"metadata":{},"sourceType":"module"}